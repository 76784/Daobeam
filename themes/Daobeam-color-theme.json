{
	"name": "Daobeam",
	"type": "light",
	"colors": { 
		"editor.background": "#E0DBC7",
		"editor.foreground": "#171717",
		"editorLineNumber.foreground": "#666666",
		"editor.inactiveSelectionBackground": "#E5EBF1",
		"editorIndentGuide.background": "#D3D3D3",
		"editor.selectionHighlightBackground": "#ADD6FF4D", 
		"editorSuggestWidget.background": "#F3F3F3",	
		
		// Sidebar
		"sideBarTitle.foreground": "#000000",
		"sideBarSectionHeader.foreground": "#000000",
		"sideBar.background": "#EDEBDE",
		"sideBar.foreground": "#000000",
		"sideBar.border": "#666666",
		"list.hoverBackground": "#E0E0E0", //in sidebar, when you hover over items		
		"badge.background": "#666666", //shows number of changes
		"badge.foreground": "#EDEBDE",

		// Panel
		"panel.background": "#dddddd",
		"panelTitle.activeForeground": "#000000",
		"panelTitle.activeBorder": "#666666",
		"panelTitle.inactiveForeground": "#666666",
		"panel.border": "#666666",

		// Tabs
		"tab.inactiveForeground": "#333333",
		"tab.activeForeground": "#000000",
		"tab.inactiveBackground": "#E0E0E0",
		
		// Activity Bar (far left vertical bar)
		"activityBar.background": "#D1CAAB",
		"activityBar.foreground": "#171717",
		"activityBarBadge.background": "#666666", // icon on icon that pops up momentarily
		"activityBarBadge.foreground": "#EDEBDE"
		,
		// Terminal
		"terminal.border": "#666666"
		,
		"terminal.ansiBrightYellow": "#B95C00"
		,
		"terminalCursor.foreground": "#ADADAD"
		,
		"terminal.ansiGreen": "#005800"
		
	},
	"tokenColors": [			
		{
			"name": "Numeric constant",
			"scope": [
				"constant.numeric"
			],
			"settings": {
				"foreground": "#0074C1"
			}
		},
		{
			"name": "Built-in constant (null, false, undefined)",
			"scope": [
				"constant.language"
			],
			"settings": {
				"fontStyle": "italic",
				"foreground": "#0074C1" 
			}
		},
		{
			"name": "HTML attribute",
			"scope": "entity.other.attribute-name",
			"settings": {
				"foreground": "#880088"
			}
		},
		{
			"scope": "meta.tag.sgml.doctype.html",
			"settings": {
				"foreground": "#880000"
			}
		},
		{
			"name": "HTML tag name and `<`, `>`",
			"scope": [
			"entity.name.tag.structure.any.html",
			"entity.name.tag",
			"punctuation.definition.tag"
			], 
			"settings": {
				"foreground": "#000088"
			}
		},
		{
			"scope": "comment",
			"settings": {
				"foreground": "#B95C00" //9D4F00
			}
		},
		{
			"scope": "entity.name.selector",
			"settings": {
				"foreground": "#872D05"
			}
		},
		{
			"scope": "invalid",
			"settings": {
				"fontStyle": "italic bold",
				"foreground": "#959595" 
			}
		},
		{
			"scope": "string",
			"settings": {
				"foreground": "#880000" //6f1616
			}
		},
		{
			"scope": [
				"string.regexp",
				"constant.regexp"
			],
			"settings": {
				"foreground": "#880000"
			}
		},
		{
			"name": "for, if, return, and `only` in '@media only' in SCSS file (but not CSS file)",
			"scope": [
				"keyword.control"
			],
			"settings": {
				"foreground": "#000088"
			}
		},
		{
			"name": "typeof, =, ===, !==, ||, && (`only`, `and` in CSS file, `and` in SCSS file)",
			"scope": [
				"keyword.operator"
			],
			"settings": {
				"foreground": "#171717"
			}
		},
		{
			"name": "JavaScript `delete` keyword",
			"scope": [
				"keyword.operator.expression.delete.js"
			],
			"settings": {
				"fontStyle": "italic",
				"foreground": "#000000",
			}
		},
		{
			"name": "Variable",
			"scope": [
				"variable"
			],
			"settings": {
				"foreground": "#880000"
			}
		},
		// BEGIN general styles, based upon javascript below ******************
		{
			"name": "`require()`", 
			"scope": [
				"support.function"
			],
			"settings": {
				"foreground": "#171717"
			}
		},
		{
			"name": "JavaScript `var`, `function`",
			"scope": [
				//.... storage.type.js
				"storage.type",
				"storage.type.function"
			],
			"settings": {
				"foreground": "#000088"
			}
		},
		{
			"name": "function names",
			"scope": [
				"entity.name.function"
				,
				//JavaScript Type (new `TypeName`)
				"entity.name.type"
				,
				//MYAPP` in var MYAPP = {}		
				"variable.other.constant"
				,
				"variable.other.constant.object"
				,
				//`console`.log
				"support.class.console"
				,
				//`User` in User.prototype.toString
				"support.class"
			],
			"settings": {
				"fontStyle": "bold",
				"foreground": "#880000"
			}
		},	
		{
			"name": "JavaScript function name at invocation",
			"scope": [
				"entity.name.function"
				,
				"support.function"
			],
			"settings": {
				"fontStyle": "",
				"foreground": "#880000"
			}
		},
		{
			"name": "name of function when a property of an object",
			"scope": [
				"entity.name.function"
			],
			"settings": {
				"foreground": "#880000"
			}
		},	
		{
			"name": "`Array`.prototype",
			"scope": [
				"support.class.builtin",
				"support.constant.math"
			],
			"settings": {
				"fontStyle": "bold",
				"foreground": "#171717"
			}
		},
		{
			"name": "new keyword (`new` TypeName)",
			"scope": [
				"keyword.operator.new"
			],
			"settings": {
				"fontStyle": "",
				"foreground": "#171717"
			}
		},
		{
			"name": "JavaScript `this` variable",
			"scope": [
				"variable.language.this"
			],
			"settings": {
				"fontStyle": "bold",
				"foreground": "#171717"
			}
		},
		{
			"name": "JavaScript parameter", 
			"scope": [
				"variable.parameter"
			],
			"settings": {
				"foreground": "#171717"
			}
		},
		{
			"name": "variable names", 
			"scope": [
				"variable.other.readwrite"				
				,
				"variable.other.property"
				,
				"variable.other.object"
			],
			"settings": {
				"foreground": "#880088"
			}
		},
		{
			"name": "visited[`name`] = member;", 
			"scope": [
				"meta.array.literal variable.other.readwrite"
			],
			"settings": {
				"foreground": "#171717"
			}
		},
		{
			"name": "`class` reserved word", 
			"scope": [
				"storage.type.class",
				"storage.modifier"
			],
			"settings": {
				"foreground": "#000088"
			}
		},
		{
			"name": "type `Name`", 
			"scope": [
				"entity.name.type.class",
				"variable.other.readwrite.alias"
			],
			"settings": {
				"fontStyle": "bold",
				"foreground": "#880000"
			}
		},
		{
			"name": "`Component`", 
			"scope": [
				"entity.other.inherited-class"
			],
			"settings": {
				"foreground": "#880000"
			}
		},
		{
			"name": "`React`", 
			"scope": [
				"entity.name.type.module"
			],
			"settings": {
				"foreground": "#171717"
			}
		},
		{
			"name": "export default keyword", 
			"scope": [
				"keyword.control.export",
				"keyword.control.default"
			],
			"settings": {
				"foreground": "#171717",
				"fontStyle": "bold"
			}
		},
		{
			"name": "`module.exports`", 
			"scope": [
				"support.type.object.module"
			],
			"settings": {
				"foreground": "#000088",
				"fontStyle": "bold"
			}
		},
		{
			"name": "object-literal.key", 
			"scope": [
				"meta.object-literal.key"
			],
			"settings": {
				"foreground": "#171717"
			}
		},
		// END general styles ******************
		// xxxxxxxxxxxxxxxxxxxxxxx BEGIN override general styles for JS xxxxxxxxxxxxxxxxxxxxxxx
		{
			"name": "console.`log`", 
			"scope": [
				"support.function.console.js"
			],
			"settings": {
				"foreground": "#171717",
				"fontStyle": ""
			}
		},
		{
			"name": "`class` reserved word", 
			"scope": [
				"support.class.component.js"
			],
			"settings": {
				"fontStyle": "",
				"foreground": "#000088"
			}
		},
		// xxxxxxxxxxxxxxxxxxxxxxx END override general styles for JS xxxxxxxxxxxxxxxxxxxxxxx		
		// BEGIN C# ******************
		{
			"name": "xml tags", 
			"scope": [
				"entity.name.tag.localname.xml"
			],
			"settings": {
				"foreground": "#000088"
			}
		},
		{
			"name": "object-literal.key", 
			"scope": [
				"entity.name.variable.local.cs"
			],
			"settings": {
				"foreground": "#880088"
			}
		},
		// END C# ******************
		// BEGIN Python ***********************
		{
			"name": "Python `class`",
			"scope": [
				"storage.type.class.python"
			],
			"settings": {
				"foreground": "#000088"
			}
		},
		{
			"name": "Python class `Name`",
			"scope": [
				"entity.name.type.class.python"
			],
			"settings": {
				"foreground": "#880000"
			}
		},
		// END Python ***********************
		// BEGIN DOM ************************************
		{
			"name": "DOM function", 
			"scope": [
				"support.function.dom.js"
			],
			"settings": {
				"foreground": "#005800"
			}
		},	
		{
			"name": "property in SpaceShip.prototype.`left`, and `window`",
			"scope": [
				"support.variable.property.dom.js",
				"support.variable.dom.js"
			],
			"settings": {
				"fontStyle": "bold",
				"foreground": "#005800"
			}
		},
		// END DOM ************************************
		// BEGIN JSON ****************************
		{
			"name": "JSON property",
			"scope": [
				"support.type.property-name.json"
			],
			"settings": {
				"foreground": "#000088"
			}
		},
		// END JSON ****************************
		// BEGIN JavaScript ************************************
		
		{
			"name": "JavaScript `var`, `function`",
			"scope": [
				//.... storage.type.js
				"storage.type.js",
				"storage.type.function.js"
			],
			"settings": {
				"foreground": "#000088"
			}
		},
		{
			"name": "function names",
			"scope": [
				"entity.name.function.js"
				,
				//JavaScript Type (new `TypeName`)
				"entity.name.type.js"
				,
				//MYAPP` in var MYAPP = {}		
				"variable.other.constant.js"
				,
				"variable.other.constant.object.js"
				,
				//`console`.log
				"support.class.console.js"
				,
				//`User` in User.prototype.toString
				"support.class.js"
			],
			"settings": {
				"fontStyle": "bold",
				"foreground": "#880000"
			}
		},	
		{
			"name": "JavaScript function name at invocation",
			"scope": [
				"meta.function-call.js entity.name.function.js"
				,
				"meta.function-call.js support.function.js"
			],
			"settings": {
				"fontStyle": "",
				"foreground": "#171717"
			}
		},
		// BEGIN must come after above
		{
			"name": "`require()`", 
			"scope": [
				"source.js meta.var.expr.js meta.function-call.js support.function.js"
			],
			"settings": {
				"fontStyle": "",
				"foreground": "#171717"
			}
		},
		// END must come after above
		{
			"name": "name of function when a property of an object",
			"scope": [
				"meta.object-literal.key.js entity.name.function.js"
			],
			"settings": {
				"foreground": "#880000"
			}
		},	
		{
			"name": "`Array`.prototype",
			"scope": [
				"support.class.builtin.js",
				"support.constant.math.js"
			],
			"settings": {
				"fontStyle": "bold",
				"foreground": "#171717"
			}
		},
		{
			"name": "JavaScript new keyword (`new` TypeName)",
			"scope": [
				"keyword.operator.new.js"
			],
			"settings": {
				"fontStyle": "",
				"foreground": "#171717"
			}
		},
		{
			"name": "JavaScript `this` variable",
			"scope": [
				"variable.language.this.js"
			],
			"settings": {
				"fontStyle": "bold",
				"foreground": "#171717"
			}
		},
		{
			"name": "JavaScript parameter", 
			"scope": [
				"variable.parameter.js"
			],
			"settings": {
				"foreground": "#171717"
			}
		},
		{
			"name": "variable names", 
			"scope": [
				"variable.other.readwrite.js"				
				,
				"variable.other.property.js"
				,
				"variable.other.object.js"
			],
			"settings": {
				"foreground": "#880088" //7D1D83
			}
		},
		{
			"name": "visited[`name`] = member;", 
			"scope": [
				"meta.array.literal.js variable.other.readwrite.js"
			],
			"settings": {
				"foreground": "#171717"
			}
		},
		// ~~~~~~~~~~~~~~~~~~~~~~~~ ECMAScript 6
		{
			"name": "`class` reserved word", 
			"scope": [
				"source.js meta.class.js storage.type.class.js",
				"source.js meta.class.js storage.modifier.js"
			],
			"settings": {
				"foreground": "#000088"
			}
		},
		{
			"name": "type `Name`", 
			"scope": [
				"source.js meta.class.js entity.name.type.class.js",
				"source.js meta.import.js variable.other.readwrite.alias.js"
			],
			"settings": {
				"fontStyle": "bold",
				"foreground": "#880000"
			}
		},
		{
			"name": "`Component`", 
			"scope": [
				"source.js meta.class.js entity.other.inherited-class.js"
			],
			"settings": {
				"foreground": "#880000"
			}
		},
		{
			"name": "`React`", 
			"scope": [
				"source.js meta.class.js entity.name.type.module.js"
			],
			"settings": {
				"foreground": "#171717"
			}
		},
		{
			"name": "promise function invocation", 
			"scope": [
				"support.function.promise.js"
			],
			"settings": {
				"foreground": "#008888",
				"fontStyle": "italic bold"
			}
		},
		{
			"name": "Promise class function call", 
			"scope": [
				"support.class.promise.js"
			],
			"settings": {
				"foreground": "#008888",
				"fontStyle": "bold"
			}
		},
		{
			"name": "export keyword", 
			"scope": [
				"keyword.control.export.js"
			],
			"settings": {
				"fontStyle": "",
				"foreground": "#171717",
			}
		},
		{
			"name": "export default keyword", 
			"scope": [
				"source.js meta.export.default.js keyword.control.export.js",
				"source.js meta.export.default.js keyword.control.default.js"
			],
			"settings": {
				"foreground": "#171717",
				"fontStyle": "bold"
			}
		},
		{
			"name": "`module.exports`", 
			"scope": [
				"source.js support.type.object.module.js"
			],
			"settings": {
				"foreground": "#000088",
				"fontStyle": "bold"
			}
		},
		{
			"name": "object-literal.key", 
			"scope": [
				"meta.object-literal.key.js"
			],
			"settings": {
				"foreground": "#171717"
			}
		},
		// JavaScript string template ~~~~~~~~~~~
		{
			"name": "JavaScript string template", 
			"scope": [
				"source.js meta.function.js meta.block.js meta.var.expr.js string.template.js"
			],
			"settings": {
				"foreground": "#171717"
			}
		},
		// END JavaScript ************************************
		// BEGIN jsdoc ************************************
		{
			"name": "jsdoc", 
			"scope": [
				"entity.name.type.instance.jsdoc"
			],
			"settings": {
				"fontStyle": "",
				"foreground": "#B95C00"
			}
		},
		{
			"name": "jsdoc", 
			"scope": [
				"comment.block.documentation.js storage.type.class.jsdoc"
			],
			"settings": {
				"fontStyle": "",
				"foreground": "#B95C00"
			}
		},		
		// END jsdoc ************************************
		// BEGIN CSS ************************************
		{
			"name": "Tag name in CSS file",
			"scope": [
				"entity.name.tag.css"
			],
			"settings": {
				"foreground": "#880000",
				"fontStyle": "bold"
			}
		},
		{
			"name": "id and classname in CSS file",
			"scope": [
				"entity.other.attribute-name.class.css",
				"entity.other.attribute-name.class.scss",
				"entity.other.attribute-name.class.mixin.css",
				"entity.other.attribute-name.class.mixin.scss",
				"entity.other.attribute-name.id.css",
				"entity.other.attribute-name.id.scss",
				"entity.other.attribute-name.parent-selector.css",
				"entity.other.attribute-name.parent-selector.scss",
				"entity.other.attribute-name.pseudo-class.css",
				"entity.other.attribute-name.pseudo-class.scss",
				"entity.other.attribute-name.pseudo-element.css",
				"entity.other.attribute-name.pseudo-element.scss",
				"entity.other.attribute-name.attribute.css",
				"entity.other.attribute-name.attribute.scss",
				"entity.other.attribute-name.css",
				"entity.other.attribute-name.scss"
			],
			"settings": {
				"foreground": "#880000"
			}
		},
		{
			"name": "property-name in CSS file",
			"scope": [
				"support.type.property-name.css",
				"meta.property-name.css",
				"meta.property-list.css",
				"source.css",
				"meta.property-name.scss",
				"meta.property-list.scss",
				"source.css.scss",
				"meta.property-list entity.name.tag.css"
			],
			"settings": {
				"fontStyle": "",
				"foreground": "#880088"
			}
		},
		{
			"name": "property-value in CSS and SCSS file",
			"scope": [				
				"support.constant.property-value.css",
				"meta.property-value.scss",
				"meta.property-list.scss",
				"source.css.scss",
				"string.quoted.single.css",
				"meta.property-value.css",
				"meta.property-list.css",
				"source.css",
				"string.quoted.single.scss",
				"variable.scss",
				"source.css.scss",
				"support.constant.font-name.css",
				"constant.numeric.css",
				"keyword.other.unit.px.css"
			],
			"settings": {
				"foreground": "#000088"
			}
		},
		{
			"name": "variable in SCSS and CSS file", 
			"scope": [
				"variable.scss",
				"variable.css"
			],
			"settings": {
				"fontStyle": "bold",
				"foreground": "#000088"
			}
		},
		{
			"name": "`only` in SCSS file",
			"scope": [
				"keyword.operator.logical.only.media.css",
				"meta.at-rule.media.header.css",
				"source.css",
				"keyword.control.operator.css.scss",
				"meta.at-rule.media.scss",
				"source.css.scss"
			],
			"settings": {
				"foreground": "#171717"				
			}
		},	
		{
			"name": "CSS @at-rule",
			"scope": [
				"keyword.control.at-rule"
			],
			"settings": {
				"fontStyle": "bold",
				"foreground": "#171717"
			}
		},
		// END CSS ************************************
		// BEGIN Markdown ***********************
		{
			"name": "## Heading",
			"scope": [
				"markup.heading.markdown entity.name.section.markdown"
			],
			"settings": {
				"fontStyle": "bold",
				"foreground": "#880000"
			}
		},
		{
			"name": "## Heading",
			"scope": [
				"markup.heading.markdown punctuation.definition.heading.markdown"
			],
			"settings": {
				"foreground": "#880000"
			}
		},
		{
			"name": "## Heading",
			"scope": [
				"meta.paragraph.markdown"
			],
			"settings": {
				"foreground": "#171717"
			}
		},
		{
			"name": "italic, bold, monospace",
			"scope": [
				"text.html.markdown meta.paragraph.markdown markup.inline.raw.string.markdown",
				"text.html.markdown meta.paragraph.markdown markup.bold.markdown",
				"text.html.markdown meta.paragraph.markdown markup.italic.markdown"
			],
			"settings": {
				"foreground": "#880000"
			}
		},
		{
			"name": "bold",
			"scope": [
				"text.html.markdown meta.paragraph.markdown markup.bold.markdown"
			],
			"settings": {
				"fontStyle": "bold"
			}
		},
		{
			"name": "italic",
			"scope": [
				"text.html.markdown meta.paragraph.markdown markup.italic.markdown"
			],
			"settings": {
				"fontStyle": "italic"
			}
		},
		{
			"name": "italic within bold",
			"scope": [
				"text.html.markdown meta.paragraph.markdown markup.bold.markdown markup.italic.markdown"
			],
			"settings": {
				"fontStyle": "italic bold"
			}
		},
		{
			"name": "------",
			"scope": [
				"text.html.markdown markup.list.numbered.markdown beginning.punctuation.definition.list.markdown",
				"text.html.markdown meta.separator.markdown",
				"text.html.markdown meta.paragraph.markdown markup.heading.setext.1.markdown",
				"text.html.markdown meta.paragraph.markdown markup.heading.setext.2.markdown"
			],
			"settings": {
				"foreground": "#880000"
			}
		},
		{
			"name": "blockquote",
			"scope": [
				"text.html.markdown markup.quote.markdown beginning.punctuation.definition.quote.markdown",
				"text.html.markdown markup.quote.markdown meta.paragraph.markdown"
			],
			"settings": {
				"fontStyle": "italic",
				"foreground": "#000088"
			}
		},
		{
			"name": "raw block",
			"scope": [
				"text.html.markdown markup.raw.block.markdown"
			],
			"settings": {
				"foreground": "#880088"
			}
		},
		{
			"name": "numbered list",
			"scope": [
				"text.html.markdown markup.list.numbered.markdown meta.paragraph.markdown",
				"text.html.markdown markup.list.numbered.markdown beginning.punctuation.definition.list.markdown"
			],
			"settings": {
				"foreground": "#880088"
			}
		},
		{
			"name": "itemized list",
			"scope": [
				"text.html.markdown markup.list.unnumbered.markdown beginning.punctuation.definition.list.markdown",
				"text.html.markdown markup.list.unnumbered.markdown meta.paragraph.markdown"
			],
			"settings": {
				"foreground": "#880088"
			}
		},
		{
			"name": "name of link [`a website`]",
			"scope": [
				"text.html.markdown meta.paragraph.markdown meta.link.inline.markdown string.other.link.title.markdown",
				"text.html.markdown meta.paragraph.markdown meta.image.inline.markdown string.other.link.description.markdown"
			],
			"settings": {
				"fontStyle": "bold",
				"foreground": "#880000"
			}
		},
		{
			"name": "underline link",
			"scope": [
				"text.html.markdown meta.paragraph.markdown meta.link.inline.markdown markup.underline.link.markdown",
				"text.html.markdown meta.link.reference.def.markdown markup.underline.link.markdown",
				"text.html.markdown meta.link.reference.def.markdown constant.other.reference.link.markdown",
				"text.html.markdown meta.link.reference.def.markdown punctuation.definition.constant.markdown",

				"text.html.markdown meta.paragraph.markdown meta.image.reference.markdown punctuation.definition.constant.markdown",
				"text.html.markdown meta.paragraph.markdown meta.image.reference.markdown constant.other.reference.link.markdown",
				"text.html.markdown meta.paragraph.markdown meta.image.reference.markdown punctuation.definition.string.begin.markdown",				
				"text.html.markdown meta.paragraph.markdown meta.image.reference.markdown string.other.link.description.markdown"
			],
			"settings": {
				"foreground": "#0074C1" 
			}
		},
		{
			"name": "fenced code",
			"scope": [
				"text.html.markdown markup.fenced_code.block.markdown"
			],
			"settings": {
				"foreground": "#000088"
			}
		}
		// END Markdown ***********************
	]
}